AWSTemplateFormatVersion: 2010-09-09
Description: >-
  auth-api

Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  Stage:
    Type: String
    Description: Runtime environment
    Default: staging

Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: SouMaisSolUsers
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true

  UserPoolTokenClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref UserPool
      GenerateSecret: false
      ExplicitAuthFlows:
        - USER_PASSWORD_AUTH

  UserPoolUser2:
    Type: AWS::Cognito::UserPoolUser
    Properties:
      DesiredDeliveryMediums:
        - EMAIL
      Username: koqipuz613@vigoneo.com
      UserPoolId: !Ref UserPool

  AuthApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"
      Auth:
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !GetAtt 'UserPool.Arn'

  CreateUser:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/src/application/web/handlers/create-user.handler
      FunctionName: AuthApi-CreateUser
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 512
      Timeout: 100
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AuthApi
            Path: /user
            Method: POST
      Policies:
        - AWSLambdaExecute
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - cognito-idp:AdminCreateUser
              Resource: !GetAtt 'UserPool.Arn'
      Environment:
        Variables:
          STAGE: !Ref Stage
          COGNITO_REGION: !Ref 'AWS::Region'
          COGNITO_USER_POOL_ID: !Ref UserPool
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Target: 'es2020'
        Sourcemap: true
        EntryPoints:
          - src/application/web/handlers/create-user.ts

  GetMyUser:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/src/application/web/handlers/get-my-user.handler
      FunctionName: AuthApi-GetMyUser
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 512
      Timeout: 100
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AuthApi
            Path: /user
            Method: GET
            Auth:
              Authorizer: CognitoAuthorizer
      Environment:
        Variables:
          STAGE: !Ref Stage
          COGNITO_REGION: !Ref 'AWS::Region'
          COGNITO_USER_POOL_ID: !Ref UserPool
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Target: 'es2020'
        Sourcemap: true
        EntryPoints:
          - src/application/web/handlers/get-my-user.ts

Outputs:
  WebEndpoint:
    Description: 'API Gateway endpoint URL for Prod stage'
    Value: !Sub 'https://${AuthApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/'
  UserPoolInfo:
    Description: 'User pool info'
    Value: !Sub '${UserPool} ${UserPoolTokenClient}'
